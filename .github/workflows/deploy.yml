name: BDeploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker and deploy image for backend
        run: cd back && docker build -t back . && docker save back -o back.tar && sshpass -p "$PASSWORD_HOST" scp back.tar $USER_HOST@$HOST:~/
        env:
          PASSWORD_HOST: ${{ secrets.PASSWORD_HOST }}
          USER_HOST: ${{ secrets.USER_HOST }}
          HOST: ${{ secrets.HOST }}

  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image an deploy for frontend
        run: cd app && docker build -t front . && docker save front -o front.tar && sshpass -p "$PASSWORD_HOST" scp front.tar $USER_HOST@$HOST:~/
        env:
          PASSWORD_HOST: ${{ secrets.PASSWORD_HOST }}
          USER_HOST: ${{ secrets.USER_HOST }}
          HOST: ${{ secrets.HOST }}

  lunch-docker-compose:
    runs-on: ubuntu-latest
    needs:
      - build-and-deploy-backend
      - build-and-deploy-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Load front
        run: sshpass -p "$PASSWORD_HOST" ssh $USER_HOST@$HOST "docker load -i ~/front.tar"
        env:
          PASSWORD_HOST: ${{ secrets.PASSWORD_HOST }}
          USER_HOST: ${{ secrets.USER_HOST }}
          HOST: ${{ secrets.HOST }}
      - name: Load back
        run: sshpass -p "$PASSWORD_HOST" ssh $USER_HOST@$HOST "docker load -i ~/back.tar"
        env:
          PASSWORD_HOST: ${{ secrets.PASSWORD_HOST }}
          USER_HOST: ${{ secrets.USER_HOST }}
          HOST: ${{ secrets.HOST }}
      - name: Copy docker-compose to server
        run: sshpass -p "$PASSWORD_HOST" scp docker-compose.prod.yml $USER_HOST@$HOST:~/docker-compose.yml
        env:
          PASSWORD_HOST: ${{ secrets.PASSWORD_HOST }}
          USER_HOST: ${{ secrets.USER_HOST }}
          HOST: ${{ secrets.HOST }}
      - name: Launch docker compose
        run: sshpass -p "$PASSWORD_HOST" ssh $USER_HOST@$HOST "docker-compose -f ~/docker-compose.yml up -d"
        env:
          PASSWORD_HOST: ${{ secrets.PASSWORD_HOST }}
          USER_HOST: ${{ secrets.USER_HOST }}
          HOST: ${{ secrets.HOST }}
